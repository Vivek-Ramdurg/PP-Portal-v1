/*
  Base Styles & Variables
  --------------------------------------------------------------------------------
*/
:root {
  --font-family-sans: 'Inter', 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  --color-primary: #007bff; /* Bright Blue */
  --color-primary-dark: #0056b3; /* Darker blue for hover */
  --color-secondary: #6c757d; /* Muted gray for secondary actions/text */
  --color-secondary-dark: #5a6268;

  --color-text-dark: #343a40; /* Darker gray for main text */
  --color-text-light: #6f7c8d; /* Lighter gray for descriptions/placeholders */

  --color-background-light: #f8f9fa; /* Very light background for page */
  --color-card-background: #ffffff; /* White for cards and modal */
  --color-border: #dee2e6; /* Light border color */
  --color-border-hover: #adb5bd; /* Slightly darker border on hover/focus */

  --color-accent-light: #e0f0ff; /* Very light blue for selected/active backgrounds */

  --color-success: #28a745;
  --color-danger: #dc3545;
  --color-warning: #ffc107;
  --color-info: #17a2b8;

  --shadow-light: 0 2px 5px rgba(0, 0, 0, 0.08); /* Subtle shadow */
  --shadow-medium: 0 5px 15px rgba(0, 0, 0, 0.12); /* Slightly more pronounced */

  --border-radius-base: 6px;
  --spacing-base: 1rem; /* Base unit for margins/padding */
}

body {
  margin: 0;
  font-family: var(--font-family-sans);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--color-background-light);
  color: var(--color-text-dark);
  line-height: 1.6;
}

/*
---
  Page Container & Dashboard Header
  --------------------------------------------------------------------------------
*/
.pageContainer {
  padding: calc(var(--spacing-base) * 2);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.dashboardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: var(--spacing-base);
  margin-bottom: calc(var(--spacing-base) * 1.5);
  border-bottom: 1px solid var(--color-border);
}

.dashboardHeader h1 {
  font-size: 2.2rem;
  color: var(--color-primary);
  margin: 0;
  font-weight: 700;
}

.createButton {
  background-color: var(--color-primary);
  color: var(--color-card-background);
  border: none;
  border-radius: var(--border-radius-base);
  padding: 0.8rem 1.5rem;
  font-size: 0.95rem;
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  transition: background-color 0.2s ease, transform 0.1s ease;
  box-shadow: var(--shadow-light);
}

.createButton:hover {
  background-color: var(--color-primary-dark);
  transform: translateY(-1px);
}

.createButton svg {
  font-size: 1rem;
}

/*
---
  Exam Grid & Cards
  --------------------------------------------------------------------------------
*/
.examGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: calc(var(--spacing-base) * 1.5);
  flex-grow: 1;
}

.examCard {
  background-color: var(--color-card-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-base);
  box-shadow: var(--shadow-light);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  transition: transform 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;
}

.examCard:hover {
  transform: translateY(-3px);
  box-shadow: var(--shadow-medium);
  border-color: var(--color-primary);
}

.cardHeader {
  background-color: var(--color-primary);
  color: var(--color-card-background);
  padding: 1rem var(--spacing-base);
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: 500;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.cardHeader h3 {
  margin: 0;
  font-size: 1.3rem;
  font-weight: 600;
}

.cardHeader span {
  font-size: 0.8rem;
  opacity: 0.8;
}

.cardBody {
  padding: var(--spacing-base);
  flex-grow: 1;
  font-size: 0.9rem;
  color: var(--color-text-light);
}

.cardBody p {
  margin-bottom: 0.5rem;
}

.cardBody strong {
  color: var(--color-text-dark);
  font-weight: 600;
  margin-right: 0.4rem;
}

.cardFooter {
  padding: 0.8rem var(--spacing-base);
  border-top: 1px solid var(--color-border);
  display: flex;
  flex-wrap: wrap;
  gap: 0.6rem;
  justify-content: flex-end;
  background-color: #fcfcfc;
}

.actionButton {
  border: none;
  border-radius: var(--border-radius-base);
  padding: 0.6rem 1rem;
  font-size: 0.8rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  text-decoration: none;
  color: var(--color-card-background);
  transition: background-color 0.2s ease, transform 0.1s ease;
  font-weight: 500;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
}

.actionButton:hover {
  transform: translateY(-1px);
}

/* Specific button colors */
.btnGreen { background-color: var(--color-success); }
.btnGreen:hover { background-color: #218838; }

.btnYellow { background-color: var(--color-warning); color: var(--color-text-dark); }
.btnYellow:hover { background-color: #e0a800; }

.btnBlue { background-color: var(--color-info); } /* Re-purposing info for freeze */
.btnBlue:hover { background-color: #138496; }

.btnRed { background-color: var(--color-danger); }
.btnRed:hover { background-color: #c82333; }

.frozenTag {
  background-color: var(--color-secondary);
  color: var(--color-card-background);
  padding: 0.6rem 1rem;
  border-radius: var(--border-radius-base);
  font-size: 0.8rem;
  display: flex;
  align-items: center;
  gap: 0.4rem;
  font-weight: 500;
}

/*
---
  Empty State
  --------------------------------------------------------------------------------
*/
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: calc(var(--spacing-base) * 4) calc(var(--spacing-base) * 2);
  text-align: center;
  color: var(--color-text-light);
  background-color: var(--color-card-background);
  border-radius: var(--border-radius-base);
  box-shadow: var(--shadow-light);
  margin-top: calc(var(--spacing-base) * 1.5);
  border: 1px solid var(--color-border);
}

.emptyState svg {
  color: var(--color-border-hover); /* Slightly more prominent than regular border */
  margin-bottom: calc(var(--spacing-base) * 1.5);
  font-size: 3.5rem;
}

.emptyState h2 {
  font-size: 1.8rem;
  margin-bottom: var(--spacing-base);
  color: var(--color-text-dark);
  font-weight: 600;
}

.emptyState .createButton {
  margin-top: var(--spacing-base);
}

/*
---
  Wizard Component (Modal)
  --------------------------------------------------------------------------------
*/
.wizardOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6); /* Slightly darker overlay */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  padding: var(--spacing-base);
}

.wizardContainer {
  background-color: var(--color-card-background);
  border-radius: var(--border-radius-base);
  box-shadow: var(--shadow-medium);
  width: 95%;
  max-width: 700px;
  display: flex;
  flex-direction: column;
  max-height: 90vh;
  overflow: hidden;
}

.wizardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.2rem var(--spacing-base);
  border-bottom: 1px solid var(--color-border);
  background-color: var(--color-primary);
  color: var(--color-card-background);
}

.wizardHeader h2 {
  margin: 0;
  font-size: 1.6rem;
  font-weight: 600;
}

.closeButton {
  background: none;
  border: none;
  color: var(--color-card-background);
  font-size: 2rem;
  cursor: pointer;
  line-height: 1;
  transition: color 0.2s ease, transform 0.2s ease;
  padding: 0.2rem 0.5rem; /* Make clickable area larger */
}

.closeButton:hover {
  color: #e9ecef; /* Lighter white */
  transform: rotate(90deg);
}

.progressBar {
  display: flex;
  justify-content: space-around;
  padding: 1rem var(--spacing-base);
  background-color: var(--color-background-light);
  border-bottom: 1px solid var(--color-border);
  position: relative;
}

.progressStep {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 0.9rem;
  color: var(--color-text-light);
  font-weight: 500;
  flex: 1;
  text-align: center;
  position: relative;
  z-index: 1; /* Ensure text/icon is above line */
}

.progressStep svg {
  font-size: 1.6rem;
  margin-bottom: 0.5rem;
  color: var(--color-border);
  transition: color 0.2s ease;
}

.progressStep.active {
  color: var(--color-primary);
  font-weight: 600;
}

.progressStep.active svg {
  color: var(--color-primary);
}

/* Connecting line for progress bar */
.progressBar::before {
  content: '';
  position: absolute;
  top: 50%;
  left: calc(var(--spacing-base) * 1.5);
  right: calc(var(--spacing-base) * 1.5);
  height: 2px;
  background-color: var(--color-border);
  transform: translateY(-50%);
  z-index: 0;
}

/* Active line segments */
.progressStep.active:not(:last-child)::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%; /* Line will span the width of the active step's flexible container */
  height: 2px;
  background-color: var(--color-primary);
  transform: translate(-50%, -50%);
  z-index: 0;
  /* This creates the illusion of the line filling up as you progress */
}

.wizardBody {
  padding: calc(var(--spacing-base) * 1.5);
  flex-grow: 1;
  overflow-y: auto; /* Scrollable content area */
  -webkit-overflow-scrolling: touch;
}

.stepContent h3 {
  font-size: 1.5rem;
  color: var(--color-primary);
  margin-top: 0;
  margin-bottom: calc(var(--spacing-base) * 1.5);
  text-align: center;
  font-weight: 600;
}

.choiceContainer {
  display: flex;
  gap: var(--spacing-base);
  margin-bottom: calc(var(--spacing-base) * 1.5);
  justify-content: center;
  flex-wrap: wrap;
}

.choiceCard {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-base);
  padding: 1.5rem;
  text-align: center;
  cursor: pointer;
  flex: 1;
  min-width: 200px;
  max-width: 300px;
  transition: all 0.2s ease;
  font-weight: 600;
  color: var(--color-text-dark);
  background-color: var(--color-card-background);
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.choiceCard:hover {
  border-color: var(--color-primary);
  background-color: var(--color-accent-light);
}

.choiceCard.selected {
  border-color: var(--color-primary);
  background-color: var(--color-accent-light);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.inputWithAction {
  display: flex;
  gap: 0.75rem;
  align-items: stretch; /* Stretch items to fill height */
}

.deleteCentreButton {
  background-color: var(--color-danger);
  color: var(--color-card-background);
  border: none;
  border-radius: var(--border-radius-base);
  padding: 0.75rem 1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease, transform 0.1s ease;
  flex-shrink: 0;
}

.deleteCentreButton:hover {
  background-color: #c82333; /* Darker red */
  transform: translateY(-1px);
}

/* Form Elements */
.formGroup {
  margin-bottom: var(--spacing-base);
}

.formGroup label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: var(--color-text-dark);
  font-size: 0.95rem;
}

.wizardBody input[type="text"],
.wizardBody input[type="date"],
.wizardBody select {
  width: 100%;
  padding: 0.8rem 1rem;
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-base);
  font-size: 0.9rem;
  box-sizing: border-box;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  background-color: var(--color-card-background);
  color: var(--color-text-dark);
}

.wizardBody input[type="text"]:focus,
.wizardBody input[type="date"]:focus,
.wizardBody select:focus {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.2); /* Soft blue focus glow */
  outline: none;
}

.checkboxGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 0.8rem;
  padding: 0.5rem 0;
}

.checkboxItem {
  display: flex;
  align-items: center;
  background-color: var(--color-card-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-base);
  padding: 0.75rem 1rem;
  cursor: pointer;
  transition: all 0.15s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.checkboxItem:hover:not(.disabled) {
  background-color: #fcfdff; /* Very light hover */
  border-color: var(--color-primary);
}

.checkboxItem input[type="checkbox"] {
  margin-right: 0.7rem;
  width: 1.15rem;
  height: 1.15rem;
  cursor: pointer;
  accent-color: var(--color-primary); /* Uses theme color for checkbox */
}

.checkboxItem label {
  font-weight: normal;
  margin: 0;
  cursor: pointer;
  flex-grow: 1;
  font-size: 0.9rem;
}

.checkboxItem.disabled {
  opacity: 0.7;
  background-color: #f0f3f6; /* Slightly darker disabled background */
  cursor: not-allowed;
  border-color: #e9ecef;
}

.checkboxItem.disabled input[type="checkbox"],
.checkboxItem.disabled label {
  cursor: not-allowed;
}

.checkboxItem.disabled span {
  font-style: italic;
  color: var(--color-text-light);
  margin-left: 0.4rem;
  font-size: 0.8em;
}

.reviewSection {
  background-color: var(--color-accent-light);
  border-left: 5px solid var(--color-primary);
  padding: calc(var(--spacing-base) * 1.2);
  border-radius: var(--border-radius-base);
  margin-top: calc(var(--spacing-base) * 2);
  box-shadow: var(--shadow-light);
}

.reviewSection h4 {
  display: flex;
  align-items: center;
  gap: 0.6rem;
  color: var(--color-primary);
  margin-top: 0;
  margin-bottom: var(--spacing-base);
  font-size: 1.2rem;
  font-weight: 600;
}

.reviewSection p {
  margin-bottom: 0.6rem;
  line-height: 1.5;
  font-size: 0.9rem;
}

.reviewSection strong {
  font-weight: 600;
  color: var(--color-text-dark);
}

/* Wizard Navigation */
.wizardNav {
  border-top: 1px solid var(--color-border);
  padding: 1rem var(--spacing-base);
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--spacing-base);
  background-color: #fcfcfc;
}

.messageArea {
  flex-grow: 1;
  min-height: 2.2rem;
  display: flex;
  align-items: center;
  font-size: 0.9rem;
}

.messageArea .success {
  color: var(--color-success);
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.3rem; /* Space between icon and text */
}

.messageArea .error {
  color: var(--color-danger);
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

.buttonGroup {
  display: flex;
  gap: 0.7rem;
}

.wizardNav button {
  padding: 0.8rem 1.4rem;
  border: none;
  border-radius: var(--border-radius-base);
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s ease;
  font-weight: 600;
  box-shadow: var(--shadow-light);
}

.backButton {
  background-color: var(--color-secondary);
  color: var(--color-card-background);
}

.backButton:hover {
  background-color: var(--color-secondary-dark);
  transform: translateY(-1px);
}

.nextButton,
.submitButton {
  background-color: var(--color-primary);
  color: var(--color-card-background);
}

.nextButton:hover,
.submitButton:hover {
  background-color: var(--color-primary-dark);
  transform: translateY(-1px);
}

.wizardNav button:disabled {
  background-color: #e9ecef;
  color: #adb5bd;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

/*
---
  Utility Classes & Animations
  --------------------------------------------------------------------------------
*/
.errorText {
  color: var(--color-danger);
  text-align: center;
  margin-top: calc(var(--spacing-base) * 2);
  font-size: 1rem;
  font-weight: 500;
}

/* Simple animations for wizard modal */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInUp {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.wizardOverlay {
  animation: fadeIn 0.3s ease-out forwards;
}

.wizardContainer {
  animation: slideInUp 0.3s ease-out forwards;
}

/*
---
  Responsive Adjustments
  --------------------------------------------------------------------------------
*/
@media (max-width: 992px) {
  .dashboardHeader h1 {
    font-size: 2rem;
  }
  .examGrid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--spacing-base);
  }
  .wizardContainer {
    max-width: 600px;
  }
}

@media (max-width: 768px) {
  .pageContainer {
    padding: var(--spacing-base);
  }

  .dashboardHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-base);
  }

  .dashboardHeader h1 {
    font-size: 1.8rem;
  }

  .createButton {
    width: 100%;
    justify-content: center;
    padding: 0.7rem 1.2rem;
    font-size: 0.9rem;
  }

  .cardHeader {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.4rem;
    padding: 0.8rem var(--spacing-base);
  }
  .cardHeader h3 {
    font-size: 1.15rem;
  }
  .cardBody {
    padding: 0.8rem;
    font-size: 0.85rem;
  }
  .cardFooter {
    flex-direction: column;
    align-items: stretch;
    padding: 0.7rem 0.8rem;
  }
  .actionButton,
  .frozenTag {
    width: 100%;
    justify-content: center;
    font-size: 0.75rem;
    padding: 0.6rem;
  }

  .emptyState {
    padding: calc(var(--spacing-base) * 2) var(--spacing-base);
  }
  .emptyState h2 {
    font-size: 1.5rem;
  }

  /* Wizard */
  .wizardHeader h2 {
    font-size: 1.4rem;
  }

  .progressBar {
    flex-wrap: wrap;
    padding: 0.8rem var(--spacing-base) 0.5rem; /* Adjust padding for wrapping */
  }
  .progressStep {
    flex-basis: 50%; /* Two steps per row */
    margin-bottom: 0.6rem;
  }
  .progressBar::before {
    display: none; /* Hide connecting line on small screens for cleaner look */
  }

  .wizardBody {
    padding: var(--spacing-base);
  }
  .stepContent h3 {
    font-size: 1.3rem;
    margin-bottom: var(--spacing-base);
  }
  .choiceCard {
    min-width: unset; /* Let it shrink if needed */
    max-width: 90%; /* Adjust for better fit */
    width: 100%; /* Take full width if stacked */
    padding: 1.2rem;
  }
  .inputWithAction {
    flex-direction: column;
    gap: 0.5rem;
  }
  .deleteCentreButton {
    width: 100%;
    padding: 0.8rem;
  }
  .checkboxGrid {
    grid-template-columns: 1fr; /* Stack checkboxes */
  }
  .wizardNav {
    flex-direction: column;
    gap: 0.8rem;
    padding: 0.8rem var(--spacing-base);
  }
  .buttonGroup {
    width: 100%;
    justify-content: stretch;
  }
  .wizardNav button {
    flex-grow: 1; /* Buttons fill available width */
  }
  .messageArea {
    text-align: center;
    width: 100%;
    margin-bottom: 0.4rem;
  }
}

@media (max-width: 480px) {
  .dashboardHeader h1 {
    font-size: 1.6rem;
  }
  .createButton {
    font-size: 0.8rem;
    padding: 0.6rem 1rem;
  }

  .wizardHeader h2 {
    font-size: 1.2rem;
  }
  .closeButton {
    font-size: 1.6rem;
  }
  .progressStep {
    font-size: 0.8rem;
  }
  .progressStep svg {
    font-size: 1.4rem;
  }
  .stepContent h3 {
    font-size: 1.1rem;
  }
  .wizardBody input,
  .wizardBody select {
    padding: 0.7rem;
    font-size: 0.85rem;
  }
  .reviewSection {
    padding: var(--spacing-base);
    font-size: 0.85rem;
  }
}